// <auto-generated />
using System;
using EgitimPortal.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EgitimPortal.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240723130743_initalcreate")]
    partial class initalcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("categoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("productsId")
                        .HasColumnType("integer");

                    b.HasKey("categoriesId", "productsId");

                    b.HasIndex("productsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("EgitimPortal.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 23, 13, 7, 43, 71, DateTimeKind.Utc).AddTicks(8808),
                            IsDeleted = false,
                            Name = "Yazılım",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 23, 13, 7, 43, 71, DateTimeKind.Utc).AddTicks(8811),
                            IsDeleted = false,
                            Name = "Dil",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 23, 13, 7, 43, 71, DateTimeKind.Utc).AddTicks(8813),
                            IsDeleted = false,
                            Name = "C# Dersleri",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 23, 13, 7, 43, 71, DateTimeKind.Utc).AddTicks(8815),
                            IsDeleted = false,
                            Name = "İngilizce",
                            ParentId = 1,
                            Priority = 2
                        });
                });

            modelBuilder.Entity("EgitimPortal.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 23, 13, 7, 43, 74, DateTimeKind.Utc).AddTicks(4019),
                            IsDeleted = false,
                            description = "The Football Is Good For Training And Recreational Purposes",
                            price = 593.85m,
                            title = "Fantastic Steel Hat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 23, 13, 7, 43, 74, DateTimeKind.Utc).AddTicks(4052),
                            IsDeleted = false,
                            description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            price = 855.03m,
                            title = "Fantastic Granite Bacon"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("EgitimPortal.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("categoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EgitimPortal.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("productsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
